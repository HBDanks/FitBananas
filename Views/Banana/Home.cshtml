@model HomeViewModel
@{
    string name = Model.AthleteName;
    List<Challenge> challenges = Model.AthleteChallenges;
    BikeTotal bikeTotal = Model.CurrentStats.YTD_Ride_Totals;
    RunTotal runTotal = Model.CurrentStats.YTD_Run_Totals;
    SwimTotal swimTotal = Model.CurrentStats.YTD_Swim_Totals;
    int daysRemaining = Model.DaysRemaining;
}

<nav class="navbar navbar-expand-md navbar-light bg-warning">
    <div class="container">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarTogglerDemo03"
            aria-controls="navbarTogglerDemo03" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand" href="/home">Fit Bananas</a>
        <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/home">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/new">New</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/settings">Settings</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/signout">Sign out</a>
                </li>
            </ul>
            <div class="navbar-nav">
                <a href="https://www.strava.com">
                    <img src="/img/api_logo_pwrdBy_strava_horiz_white.svg" height="40" class="d-inline-block align-top">
                </a>
            </div>
        </div>
    </div>
</nav>
<main class="container">
    <div class="row m-5">
        <div class="col-auto me-auto">
            <h1>@name's @DateTime.Now.Year Challenges</h1>
        </div>
        <div class="col-auto">
            <h2 id="timeRemaining"></h2>
        </div>
    </div>
    @if (challenges.Count > 0)
    {
        foreach (var challenge in challenges)
        {
            if (challenge.ChallengeType == "Elevation Gain")
            {
                int total;
                if (challenge.ActivityType == "Run")
                {
                    total = runTotal.ElevationGainToFeet();
                }
                else
                {
                    total = bikeTotal.ElevationGainToFeet();
                }
                <div class="row mb-4">
                    <div class="col-md-8 card">
                        <h4>@challenge.Title</h4>
                        <p class="text-center mb-0">@total of @challenge.Goal feet</p>
                        @{
                            int progress;
                            if (total >= challenge.Goal)
                            {
                                progress = 100;
                            }
                            else
                            {
                                progress = (int)((float)total / challenge.Goal * 100);
                            }
                            int averageGain = total / DateTime.Now.DayOfYear;
                            int averageGainToComplete = (challenge.Goal - total) / daysRemaining;
                            if (averageGainToComplete < 0) { averageGainToComplete = 0; }
                            int onPaceTotal = (int)((float)challenge.Goal / 365 * DateTime.Now.DayOfYear);
                            int diff = onPaceTotal - total;
                            string color;
                            string onPace;
                            if (diff <= 0)
                            {
                                color = "success";
                                onPace = "ahead";
                            }
                            else 
                            {
                                color = "danger";
                                onPace = "behind";
                            }
                        }
                        <div class="progress mb-3">
                            <div class="progress-bar progress-bar-striped bg-@color" role="progressbar"
                                style='width: @($"{progress}%")' aria-valuenow='@($"{progress}%")' aria-valuemin="0"
                                aria-valuemax="100"></div>
                        </div>
                        <p class="mb-1">@(challenge.Goal - progress) feet @onPace schedule!</p>
                        <p class="mb-1">Average Daily Elevation Gain: @averageGain feet</p>
                        <p>Average Daliy Elevation Gain to completion: @averageGainToComplete feet</p>
                    </div>
                    <div class="col d-none d-md-block">
                        <img class="img-fluid"
                            src="~/img/challengeImages/@challenge.ImageFileName"
                            alt="challenge image">
                    </div>
                </div>
            }
            else
            {
                int distanceTotal;
                switch (challenge.ActivityType)
                {
                    case "Run":
                        distanceTotal = runTotal.DistanceToMiles();
                        break;

                    case "Bike":
                        distanceTotal = bikeTotal.DistanceToMiles();
                        break;

                    default:
                        distanceTotal = swimTotal.DistanceToMiles();
                        break;

                    
                }
                var distanceGoal = (int)(challenge.Goal / 1609.34); 
                <div class="row mb-4">
                    <div class="col-md-8 card">
                        <h4>@challenge.Title</h4>
                        <p class="text-center mb-0">@distanceTotal of @distanceGoal miles</p>
                        @{
                            int distanceProgress;
                            if (distanceTotal>= distanceGoal)
                            {
                                distanceProgress = 100;
                            }
                            else
                            {
                                distanceProgress = (int)((float)distanceTotal/ distanceGoal * 100);
                            }
                            int averageDistance = distanceTotal/ DateTime.Now.DayOfYear;
                            int averageDistanceToComplete = (distanceGoal - distanceTotal) / daysRemaining;
                            if (averageDistanceToComplete < 0) { averageDistanceToComplete = 0; }
                            int distanceOnPaceTotal = (int)((float)distanceGoal / 365 * DateTime.Now.DayOfYear);
                            int distanceDiff = distanceOnPaceTotal - distanceTotal;
                            string distanceColor;
                            string distanceOnPace;
                            if (distanceDiff <= 0)
                            {
                                distanceColor= "success";
                                distanceOnPace = "ahead";
                            }
                            else 
                            {
                                distanceColor= "danger";
                                distanceOnPace = "behind";
                            }
                        }
                        <div class="progress mb-3">
                            <div class="progress-bar progress-bar-striped bg-@distanceColor" role="progressbar"
                                style='width: @($"{distanceProgress}%")' aria-valuenow='@($"{distanceProgress}%")' aria-valuemin="0"
                                aria-valuemax="100"></div>
                        </div>
                        <p class="mb-1">@(distanceGoal - distanceProgress) miles @distanceOnPace schedule!</p>
                        <p class="mb-1">Average Daily Miles: @averageDistance miles</p>
                        <p>Average Daliy Miles to completion: @averageDistanceToComplete miles</p>
                    </div>
                    <div class="col d-none d-md-block">
                        <img class="img-fluid"
                            src="~/img/challengeImages/@challenge.ImageFileName"
                            alt="Mount Rainier">
                    </div>
                </div>
            }
        }
    }
    else
    {
        <p class="text-center display-4 mb-3">You don't have any challenges yet!</p>
        <div class="row justify-content-center">
            <div class="col-auto">
                <a href="/new" class="btn btn-lg btn-warning">Add a Challenge</a>
            </div>
        </div>
    }
</main>
<script src="~/js/timeRemaining.js"></script>
